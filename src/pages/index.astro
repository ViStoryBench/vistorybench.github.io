---
import '/src/styles/global.css'
import BaseLayout from '../layouts/BaseLayout.astro';

// For the index page, the title in the Header component will use its default
// or you can explicitly pass one. The document <title> is handled by BaseLayout.
const pageSpecificTitle = "Storytelling Benchmark Overview & Leaderboard";
const currentNav = "overview";

// Data provided by user - CSV format for full, TSV for lite
const fullDatasetCsvContent = `
Method,model,mode,Character Consistency(CRef)_rank,Style Consistency(SRef)_rank,Prompt Alignment_rank,Generative Quality_rank,Diversity_rank,overall_rank,model_key
Story image method,StoryDiffusion,Original,5,3,6,2,1,1,Story image method - StoryDiffusion
Story image method,OmniGen2,Base,2,2,3,5,7,2,Story image method - OmniGen2
Story video method,MovieAgent,SD3,8,5,1,4,2,3,Story video method - MovieAgent
Story image method,UNO,Base,3,2,4,6,5,3,Story image method - UNO
Story video method,AnimDirector,SD3,6,5,2,3,6,4,Story video method - AnimDirector
Story image method,StoryAdapter,ImgRef_Scale0,4,2,5,7,4,4,Story image method - StoryAdapter
Story video method,MMStoryAgent,Base,7,4,8,1,9,5,Story video method - MMStoryAgent
NaiveBaseline,NaiveBaseline,Base,1,1,11,9,11,6,NaiveBaseline - NaiveBaseline
Story image method,TheaterGen,Base,10,7,10,8,3,7,Story image method - TheaterGen
Story image method,StoryGen,AutoRegressive,5,4,9,11,10,8,Story image method - StoryGen
Story video method,Vlogger,ImgRef,9,6,7,10,8,9,Story video method - Vlogger
Story image method,SeedStory,Base,11,3,12,12,12,10,Story image method - SeedStory
`.trim();

const liteDatasetTsvContent = `
Method,model,mode,Character Consistency(CRef)_rank,Style Consistency(SRef)_rank,Prompt Alignment_rank,Generative Quality_rank,Diversity_rank,overall_rank,model_key
MLLM model,GPT4o,Base,2,3,1,8,12,1,MLLM model - GPT4o
Commercial platform,NanoBanana,Gemini2.5FlashImagePreview,5,5,3,6,7,1,Commercial platform - NanoBanana
Commercial platform,DouBao,Base,8,4,2,5,11,2,Commercial platform - DouBao
Commercial platform,AIbrm,Base,3,2,9,4,13,3,Commercial platform - AIbrm
Story image method,StoryDiffusion,Original,13,9,12,2,2,4,Story image method - StoryDiffusion
Story image method,OmniGen2,Base,3,4,5,11,17,5,Story image method - OmniGen2
Story image method,UNO,Base,6,7,7,12,8,5,Story image method - UNO
Story video method,MovieAgent,SD3,11,13,6,10,3,6,Story video method - MovieAgent
Story image method,StoryAdapter,ImgRef_Scale0,7,6,8,17,5,6,Story image method - StoryAdapter
Commercial platform,TypeMovie,Base,8,10,10,9,6,6,Commercial platform - TypeMovie
Story video method,AnimDirector,SD3,10,14,5,7,10,7,Story video method - AnimDirector
Commercial platform,MorphicStudio,Base,4,5,9,14,15,8,Commercial platform - MorphicStudio
Commercial platform,ShenBi,Base,14,14,5,13,4,9,Commercial platform - ShenBi
Commercial platform,MOKI,Base,16,11,16,3,9,10,Commercial platform - MOKI
NaiveBaseline,NaiveBaseline,Base,1,1,17,18,20,11,NaiveBaseline - NaiveBaseline
MLLM model,Gemini,Base,12,12,4,16,14,12,MLLM model - Gemini
Story video method,MMStoryAgent,Base,16,11,13,1,18,13,Story video method - MMStoryAgent
Story image method,TheaterGen,Base,16,16,15,15,1,14,Story image method - TheaterGen
Story image method,StoryGen,AutoRegressive,9,11,14,20,19,15,Story image method - StoryGen
Story video method,Vlogger,ImgRef,15,15,11,19,16,16,Story video method - Vlogger
Story image method,SeedStory,Base,16,8,18,21,21,17,Story image method - SeedStory
`.trim();

interface DataRow {
    [key: string]: string;
}

interface ParsedData {
    headers: string[];
    data: DataRow[];
}

function parseCSV(csvString: string): ParsedData {
    const lines = csvString.trim().split('\n');
    const headers = lines[0].split(',').map((h: string) => h.trim().replace(/^"|"$/g, '').replace(/\r$/, ''));
    const data = lines.slice(1).map((line: string) => {
        const values = line.split(','); // CSV uses comma as delimiter
        const row: DataRow = {};
        headers.forEach((header: string, index: number) => {
            row[header] = values[index] ? values[index].trim().replace(/^"|"$/g, '').replace(/\r$/, '') : '';
        });
        return row;
    });
    return { headers, data };
}

const fullResults = parseCSV(fullDatasetCsvContent);
const liteResults = parseCSV(liteDatasetTsvContent);
// Placeholder for icons - in a real scenario, you might use Astro icons or SVG imports
const IconDiversity = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8 mb-3 text-sky-600 dark:text-sky-400"><path stroke-linecap="round" stroke-linejoin="round" d="M12 6.042A8.967 8.967 0 006 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 016 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 016-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0018 18a8.967 8.967 0 00-6 2.292m0-14.25v14.25" /></svg>`;
const IconStructure = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8 mb-3 text-teal-600 dark:text-teal-400"><path stroke-linecap="round" stroke-linejoin="round" d="M3.75 12h16.5m-16.5 3.75h16.5M3.75 19.5h16.5M5.625 4.5h12.75a1.875 1.875 0 010 3.75H5.625a1.875 1.875 0 010-3.75z" /></svg>`;
const IconMetrics = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8 mb-3 text-purple-600 dark:text-purple-400"><path stroke-linecap="round" stroke-linejoin="round" d="M10.5 6a7.5 7.5 0 107.5 7.5h-7.5V6z" /><path stroke-linecap="round" stroke-linejoin="round" d="M13.5 10.5H21A7.5 7.5 0 0013.5 3v7.5z" /></svg>`;
const IconScale = `<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-8 h-8 mb-3 text-indigo-600 dark:text-indigo-400"><path stroke-linecap="round" stroke-linejoin="round" d="M3.75 3v11.25A2.25 2.25 0 006 16.5h12A2.25 2.25 0 0020.25 14.25V3M3.75 21h16.5M16.5 3v11.25 M8.25 3v11.25" /></svg>`;
const IconHuggingFace = `<svg xmlns="http://www.w3.org/2000/svg" height="1em" style="flex:none;line-height:1" viewBox="0 0 24 24" width="1em"><script xmlns=""/><title>HuggingFace</title><g fill="none" fill-rule="nonzero"><path d="M2.25 11.535c0-3.407 1.847-6.554 4.844-8.258a9.822 9.822 0 019.687 0c2.997 1.704 4.844 4.851 4.844 8.258 0 5.266-4.337 9.535-9.687 9.535S2.25 16.8 2.25 11.535z" fill="#FF9D0B"/><path d="M11.938 20.086c4.797 0 8.687-3.829 8.687-8.551 0-4.722-3.89-8.55-8.687-8.55-4.798 0-8.688 3.828-8.688 8.55 0 4.722 3.89 8.55 8.688 8.55z" fill="#FFD21E"/><path d="M11.875 15.113c2.457 0 3.25-2.156 3.25-3.263 0-.576-.393-.394-1.023-.089-.582.283-1.365.675-2.224.675-1.798 0-3.25-1.693-3.25-.586 0 1.107.79 3.263 3.25 3.263h-.003z" fill="#FF323D"/><path d="M14.76 9.21c.32.108.445.753.767.585.447-.233.707-.708.659-1.204a1.235 1.235 0 00-.879-1.059 1.262 1.262 0 00-1.33.394c-.322.384-.377.92-.14 1.36.153.283.638-.177.925-.079l-.002.003zm-5.887 0c-.32.108-.448.753-.768.585a1.226 1.226 0 01-.658-1.204c.048-.495.395-.913.878-1.059a1.262 1.262 0 011.33.394c.322.384.377.92.14 1.36-.152.283-.64-.177-.925-.079l.003.003zm1.12 5.34a2.166 2.166 0 011.325-1.106c.07-.02.144.06.219.171l.192.306c.069.1.139.175.209.175.074 0 .15-.074.223-.172l.205-.302c.08-.11.157-.188.234-.165.537.168.986.536 1.25 1.026.932-.724 1.275-1.905 1.275-2.633 0-.508-.306-.426-.81-.19l-.616.296c-.52.24-1.148.48-1.824.48-.676 0-1.302-.24-1.823-.48l-.589-.283c-.52-.248-.838-.342-.838.177 0 .703.32 1.831 1.187 2.56l.18.14z" fill="#3A3B45"/><path d="M17.812 10.366a.806.806 0 00.813-.8c0-.441-.364-.8-.813-.8a.806.806 0 00-.812.8c0 .442.364.8.812.8zm-11.624 0a.806.806 0 00.812-.8c0-.441-.364-.8-.812-.8a.806.806 0 00-.813.8c0 .442.364.8.813.8zM4.515 13.073c-.405 0-.765.162-1.017.46a1.455 1.455 0 00-.333.925 1.801 1.801 0 00-.485-.074c-.387 0-.737.146-.985.409a1.41 1.41 0 00-.2 1.722 1.302 1.302 0 00-.447.694c-.06.222-.12.69.2 1.166a1.267 1.267 0 00-.093 1.236c.238.533.81.958 1.89 1.405l.24.096c.768.3 1.473.492 1.478.494.89.243 1.808.375 2.732.394 1.465 0 2.513-.443 3.115-1.314.93-1.342.842-2.575-.274-3.763l-.151-.154c-.692-.684-1.155-1.69-1.25-1.912-.195-.655-.71-1.383-1.562-1.383-.46.007-.889.233-1.15.605-.25-.31-.495-.553-.715-.694a1.87 1.87 0 00-.993-.312zm14.97 0c.405 0 .767.162 1.017.46.216.262.333.588.333.925.158-.047.322-.071.487-.074.388 0 .738.146.985.409a1.41 1.41 0 01.2 1.722c.22.178.377.422.445.694.06.222.12.69-.2 1.166.244.37.279.836.093 1.236-.238.533-.81.958-1.889 1.405l-.239.096c-.77.3-1.475.492-1.48.494-.89.243-1.808.375-2.732.394-1.465 0-2.513-.443-3.115-1.314-.93-1.342-.842-2.575.274-3.763l.151-.154c.695-.684 1.157-1.69 1.252-1.912.195-.655.708-1.383 1.56-1.383.46.007.889.233 1.15.605.25-.31.495-.553.718-.694.244-.162.523-.265.814-.3l.176-.012z" fill="#FF9D0B"/><path d="M9.785 20.132c.688-.994.638-1.74-.305-2.667-.945-.928-1.495-2.288-1.495-2.288s-.205-.788-.672-.714c-.468.074-.81 1.25.17 1.971.977.721-.195 1.21-.573.534-.375-.677-1.405-2.416-1.94-2.751-.532-.332-.907-.148-.782.541.125.687 2.357 2.35 2.14 2.707-.218.362-.983-.42-.983-.42S2.953 14.9 2.43 15.46c-.52.558.398 1.026 1.7 1.803 1.308.778 1.41.985 1.225 1.28-.187.295-3.07-2.1-3.34-1.083-.27 1.011 2.943 1.304 2.745 2.006-.2.7-2.265-1.324-2.685-.537-.425.79 2.913 1.718 2.94 1.725 1.075.276 3.813.859 4.77-.522zm4.432 0c-.687-.994-.64-1.74.305-2.667.943-.928 1.493-2.288 1.493-2.288s.205-.788.675-.714c.465.074.807 1.25-.17 1.971-.98.721.195 1.21.57.534.377-.677 1.407-2.416 1.94-2.751.532-.332.91-.148.782.541-.125.687-2.355 2.35-2.137 2.707.215.362.98-.42.98-.42S21.05 14.9 21.57 15.46c.52.558-.395 1.026-1.7 1.803-1.308.778-1.408.985-1.225 1.28.187.295 3.07-2.1 3.34-1.083.27 1.011-2.94 1.304-2.743 2.006.2.7 2.263-1.324 2.685-.537.423.79-2.912 1.718-2.94 1.725-1.077.276-3.815.859-4.77-.522z" fill="#FFD21E"/></g><script xmlns=""/></svg>`;
const IconGitHub = `<svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true"><path fill-rule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.026 2.747-1.026.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.308.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.001 10.001 0 0022 12.017C22 6.484 17.522 2 12 2z" clip-rule="evenodd" /></svg>`;
const IconLeaderboard = `<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path></svg>`;

const bibtexCitation = `@article{zhuang2025vistorybench,
  title={ViStoryBench: Comprehensive Benchmark Suite for Story Visualization},
  author={Cailin Zhuang, Ailin Huang, Wei Cheng, Jingwei Wu, Yaoqi Hu, Jiaqi Liao, Hongyuan Wang, Xinyao Liao, Weiwei Cai, Hengyuan Xu, Xuanyang Zhang, Xianfang Zeng, Zhewei Huang, Gang Yu, Chi Zhang},
  journal={arXiv preprint arxiv:2505.24862},
  year={2025}
}`;

export interface Props {
    title: string;
}
const { title } = Astro.props;
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
	</head>
	<body>
        
		<BaseLayout title={pageSpecificTitle} activeNav={currentNav}>
			{/* The <header> and <footer> are now part of BaseLayout via components */}
			{/* Main content specific to index.astro starts here */}
                <!-- Dataset Title & Brief Intro -->
                <section class="py-16 sm:py-20 px-4 bg-gradient-to-br from-sky-100 via-slate-100 to-purple-100 dark:from-sky-900/50 dark:via-slate-800 dark:to-purple-900/50">
                  <div class="container mx-auto text-center">
                    <h1 class="text-4xl sm:text-5xl lg:text-6xl font-extrabold text-slate-900 dark:text-white mb-6">
                      The ViStoryBench Dataset
                    </h1>
                    <p class="text-lg sm:text-xl text-slate-700 dark:text-slate-300 max-w-3xl mx-auto mb-8">
                      A meticulously curated collection designed to advance story visualization research, featuring diverse narratives, artistic styles, and complex character interactions.
                    </p>
                    <div class="prose prose-lg dark:prose-invert mx-auto bg-white/60 dark:bg-slate-800/60 p-6 rounded-xl shadow-lg border border-gray-200 dark:border-gray-700/50">
                      <h2 class="text-2xl font-semibold !text-slate-800 dark:!text-slate-100 !mb-3 text-center">Core Mission</h2>
                      <p class="!text-slate-600 dark:!text-slate-300">
                        ViStoryBench aims to provide a comprehensive and challenging benchmark to rigorously evaluate and compare story visualization models. It focuses on real-world complexities such as character consistency, narrative coherence, and stylistic integrity across a sequence of images.
                      </p>
                    </div>
                  </div>
                  <section class="py-16 sm:py-20 px-4 text-center  from-purple-50 via-sky-50 to-teal-50 dark:from-purple-900/30 dark:via-sky-800/50 dark:to-teal-900/30">
                  <div class="container mx-auto">
                    <div class="flex flex-wrap justify-center items-center gap-4 sm:gap-6">
                        <a href="https://huggingface.co/datasets/ViStoryBench/ViStoryBench" target="_blank" rel="noopener noreferrer" class="inline-flex items-center bg-sky-600 hover:bg-sky-700 dark:bg-sky-500 dark:hover:bg-sky-600 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:shadow-sky-400/50 dark:hover:shadow-sky-500/40 transition-all duration-300 transform hover:scale-105">
                            <Fragment set:html={IconHuggingFace} />
                            Download Dataset
                        </a>
                        <!-- <a href="https://vistorybench.github.io" target="_blank" rel="noopener noreferrer" class="inline-block bg-purple-600 hover:bg-purple-700 dark:bg-purple-500 dark:hover:bg-purple-600 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:shadow-purple-400/50 dark:hover:shadow-purple-500/40 transition-all duration-300 transform hover:scale-105">
                            View Project Page
                        </a> -->
                        <a href="https://github.com/vistorybench/vistorybench" target="_blank" rel="noopener noreferrer" class="inline-flex items-center bg-teal-600 hover:bg-teal-700 dark:bg-teal-500 dark:hover:bg-teal-600 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:shadow-teal-400/50 dark:hover:shadow-teal-500/40 transition-all duration-300 transform hover:scale-105">
                            <Fragment set:html={IconGitHub} />
                            Code & Tools (GitHub)
                        </a>
                        <a href="/leaderboard_detail" class="inline-flex items-center bg-slate-600 hover:bg-slate-700 dark:bg-slate-500 dark:hover:bg-slate-600 text-white font-semibold py-3 px-8 rounded-lg shadow-lg hover:shadow-slate-400/50 dark:hover:shadow-slate-500/40 transition-all duration-300 transform hover:scale-105">
                            <Fragment set:html={IconLeaderboard} />
                            View Leaderboard
                        </a>
                    </div>
                </section>
                </div>
                </section>
            
			<div class="container mx-auto px-4 py-8">

				<section id="leaderboard" class="mb-12 p-6 bg-white dark:bg-slate-800 shadow-lg rounded-lg">
                    <div class="flex flex-col sm:flex-row justify-between items-center mb-4 gap-4">
                        <h2 class="text-2xl font-semibold text-gray-700 dark:text-slate-200" data-lang-key="leaderboard_title">Leaderboard Rankings</h2>
                        <div id="mode-toggle-buttons-summary" class="flex space-x-2">
                            <button id="lite-mode-btn-summary" class="px-4 py-2 rounded font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" data-lang-key="button_lite_mode">Lite Mode</button>
                            <button id="full-mode-btn-summary" class="px-4 py-2 rounded font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" data-lang-key="button_full_mode">Full Mode</button>
                        </div>
                    </div>
					<div class="overflow-x-auto">
						<table id="summary-leaderboard-table" class="min-w-full bg-white dark:bg-slate-800">
							<thead id="summary-leaderboard-thead" class="bg-gray-200 dark:bg-slate-700 text-gray-600 dark:text-slate-300">
								<!-- Headers will be rendered by script -->
							</thead>
							<tbody id="summary-leaderboard-tbody" class="text-gray-700 dark:text-slate-300">
								<!-- Rows will be rendered by script -->
							</tbody>
						</table>
					</div>
                    <div class="mt-6 text-center">
                        <a href="/leaderboard_detail" 
                           class="inline-block bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-6 rounded-lg shadow-md transition duration-150 ease-in-out focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                           data-lang-key="view_more_details_button">
                           View More Details
                        </a>
                    </div>
				</section>
                 <!-- Task Definition Section -->
    <section class="py-16 sm:py-20 px-4">
        <div class="container mx-auto">
          <h2 class="text-3xl sm:text-4xl font-bold text-slate-900 dark:text-white mb-12 text-center">Task Definition for Story Visualization</h2>
          <div class="max-w-4xl mx-auto bg-white dark:bg-slate-800 p-6 sm:p-10 rounded-2xl shadow-xl border-gray-200 dark:border-gray-700">
            <p class="text-slate-600 dark:text-slate-300 mb-6 text-lg leading-relaxed">The primary goal is to generate a sequence of images \(I_1, I_2, ..., I_m\) that faithfully and consistently visualize a given story, detailed through character information and a series of storyboard shot descriptions.</p>
            <div class="mb-8">
              <h4 class="text-xl font-semibold text-sky-700 dark:text-sky-400 mb-3">Given Inputs:</h4>
              <ol class="list-decimal list-outside ml-5 space-y-4 text-slate-600 dark:text-slate-300">
                <li>
                  <strong>Character Information (\(C_1, ..., C_n\)):</strong> For each of the \(n\) characters, provide:
                  <ul class="list-disc list-outside ml-6 mt-2 space-y-1 text-sm bg-slate-50 dark:bg-slate-700/50 p-4 rounded-md shadow-sm">
                    <li>Textual appearance description (\(T_i\)).</li>
                    <li>Corresponding reference image(s) (\(S_i\)) consistent with \(T_i\).</li>
                  </ul>
                </li>
                <li>
                  <strong>Storyboard Shots (\(Shot_1, ..., Shot_m\)):</strong> For each of the \(m\) shots, provide a textual description including:
                  <ul class="list-disc list-outside ml-6 mt-2 space-y-1 text-sm bg-slate-50 dark:bg-slate-700/50 p-4 rounded-md shadow-sm">
                    <li><strong>Setting Description:</strong> The environment and context of the current scene.</li>
                    <li><strong>Plot Correspondence:</strong> The segment of the original narrative relevant to this shot.</li>
                    <li><strong>Onstage Characters:</strong> A list of characters present and active in this shot.</li>
                    <li><strong>Static Shot Description:</strong> Detailed depiction of characters' static actions, expressions, positions, and significant objects within the frame.</li>
                    <li><strong>Shot Perspective Design:</strong> Cinematographic details like shot scale (e.g., close-up, wide shot), camera angle, and shot type.</li>
                  </ul>
                </li>
              </ol>
            </div>
            <div>
              <h4 class="text-xl font-semibold text-sky-700 dark:text-sky-400 mb-3">Objective:</h4>
              <p class="text-slate-600 dark:text-slate-300">To generate an image sequence \(I_1, ..., I_m\) where each image \(I_j\) accurately and aesthetically portrays the specified \(Shot_j\). This includes:
              </p>
              <ul class="list-disc list-outside ml-5 mt-2 space-y-1 text-slate-600 dark:text-slate-300">
                <li>Faithful depiction of characters according to their references and descriptions.</li>
                <li>Correct representation of character actions, interactions, and expressions.</li>
                <li>Accurate portrayal of the scene setting and atmosphere.</li>
                <li>Adherence to the specified camera perspectives and shot compositions.</li>
                <li>Maintaining visual and stylistic consistency across the image sequence.</li>
              </ul>
            </div>
          </div>
        </div>
      </section>
    <!-- Key Dataset Features Section -->
    <section class="py-16 sm:py-20 px-4">
        <div class="container mx-auto">
          <h2 class="text-3xl sm:text-4xl font-bold text-slate-900 dark:text-white mb-12 text-center">
            Dataset Core Characteristics
          </h2>
          <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
            <div class="feature-card bg-white dark:bg-slate-800 p-6 rounded-xl shadow-lg hover:shadow-sky-500/30 dark:hover:shadow-sky-600/30 border border-transparent hover:border-sky-300 dark:hover:border-sky-600 transition-all duration-300 transform hover:-translate-y-1">
              <Fragment set:html={IconDiversity} />
              <h3 class="text-xl font-semibold text-sky-700 dark:text-sky-400 mb-2">Rich Diversity</h3>
              <p class="text-sm text-slate-600 dark:text-slate-300">Encompasses varied story types (comedy, horror, fantasy) and artistic styles (anime, 3D, realistic) for comprehensive model testing.</p>
            </div>
            <div class="feature-card bg-white dark:bg-slate-800 p-6 rounded-xl shadow-lg hover:shadow-teal-500/30 dark:hover:shadow-teal-600/30 border border-transparent hover:border-teal-300 dark:hover:border-teal-600 transition-all duration-300 transform hover:-translate-y-1">
              <Fragment set:html={IconStructure} />
              <h3 class="text-xl font-semibold text-teal-700 dark:text-teal-400 mb-2">Complex Narratives</h3>
              <p class="text-sm text-slate-600 dark:text-slate-300">Features stories with single/multiple protagonists, intricate plots, and detailed world-building to challenge generation accuracy and consistency.</p>
            </div>
            <div class="feature-card bg-white dark:bg-slate-800 p-6 rounded-xl shadow-lg hover:shadow-purple-500/30 dark:hover:shadow-purple-600/30 border border-transparent hover:border-purple-300 dark:hover:border-purple-600 transition-all duration-300 transform hover:-translate-y-1">
              <Fragment set:html={IconMetrics} />
              <h3 class="text-xl font-semibold text-purple-700 dark:text-purple-400 mb-2">Character-Centric</h3>
              <p class="text-sm text-slate-600 dark:text-slate-300">Focuses on maintaining character consistency across shots, providing detailed descriptions and multiple reference images per character.</p>
            </div>
            <div class="feature-card bg-white dark:bg-slate-800 p-6 rounded-xl shadow-lg hover:shadow-indigo-500/30 dark:hover:shadow-indigo-600/30 border border-transparent hover:border-indigo-300 dark:hover:border-indigo-600 transition-all duration-300 transform hover:-translate-y-1">
              <Fragment set:html={IconScale} />
              <h3 class="text-xl font-semibold text-indigo-700 dark:text-indigo-400 mb-2">Significant Scale</h3>
              <p class="text-sm text-slate-600 dark:text-slate-300">Comprises <strong>80 story segments</strong>, <strong>344 unique characters</strong>, and <strong>509 reference images</strong>, ensuring a robust evaluation base.</p>
            </div>
          </div>
        </div>
      </section>
				<section id="news" class="mb-12 p-6 bg-white dark:bg-slate-800 shadow-lg rounded-lg">
					<h2 class="text-2xl font-semibold text-gray-700 dark:text-slate-200 mb-3" data-lang-key="news_title">News & Updates</h2>
					<ul class="list-disc list-inside text-gray-600 dark:text-slate-300 space-y-2">
						<li><strong class="font-semibold">[2025]</strong> 🏆 Ongoing leaderboard maintenance and evaluation of new story visualization methods.</li>
						<li><strong class="font-semibold">[2025.08.19]</strong> 🛠️ Major code update: Full benchmark implementation released.</li>
						<li><strong class="font-semibold">[2025.08.12]</strong> 📄 arXiv v3 is now available.</li>
						<li><strong class="font-semibold">[2025.06.25]</strong> 📄 arXiv v2 has been published.</li>
						<li><strong class="font-semibold">[2025.05.30]</strong> 📝 Technical report v1 released on arXiv.</li>
						<li><strong class="font-semibold">[2025.05.21]</strong> 🚀 Initial project launch and code release.</li>
					</ul>
				</section>

				<section id="about" class="mb-12 p-6 bg-white dark:bg-slate-800 shadow-lg rounded-lg">
					<h2 class="text-2xl font-semibold text-gray-700 dark:text-slate-200 mb-4" data-lang-key="about_title">About</h2>
					<div class="mb-6">
						<h3 class="text-xl font-semibold text-gray-700 dark:text-slate-200 mb-2" data-lang-key="about_citation_title">Citation</h3>
						<p class="text-gray-600 dark:text-slate-300 mb-2" data-lang-key="about_citation_text">If you use ViStoryBench in your research, please cite our paper:</p>
						<pre class="bg-gray-100 dark:bg-slate-700 p-4 rounded-md overflow-x-auto"><code class="text-sm text-gray-700 dark:text-slate-200">{bibtexCitation}</code></pre>
					</div>
					<div>
						<h3 class="text-xl font-semibold text-gray-700 dark:text-slate-200 mb-2" data-lang-key="about_license_title">License</h3>
						<p class="text-gray-600 dark:text-slate-300" data-lang-key="about_license_text">The benchmark code and results are licensed under the MIT License.</p>
					</div>
				</section>
			</div>
		</BaseLayout>
	</body>
</html>

<script define:vars={{ fullResultsData: fullResults, liteResultsData: liteResults }}>
    const modelUrls = {
        'GPT4o': 'https://openai.com/research/gpt-4-1',
        'DouBao': 'https://www.doubao.com/',
        'AIbrm': 'https://brmgo.cn/',
        'ShenBi': 'https://shenbi.maoyan.com/',
        'MorphicStudio': 'https://www.morphic.com/',
        'TypeMovie': 'https://typemovie.art',
        'MOKI': 'https://www.moki.cn',
        "NanoBanana":"https://aistudio.google.com/models/gemini-2-5-flash-image",
        "OmniGen2":"https://github.com/VectorSpaceLab/OmniGen2",
        'Gemini': 'https://developers.googleblog.com/en/experiment-with-gemini-20-flash-native-image-generation/',
        'UNO': 'https://github.com/bytedance/UNO',
        'StoryAdapter': 'https://github.com/UCSC-VLAA/story-adapter',
        'MovieAgent': 'https://github.com/showlab/MovieAgent',
        'AnimDirector': 'https://github.com/HITsz-TMG/Anim-Director',
        'StoryDiffusion': 'https://github.com/HVision-NKU/StoryDiffusion',
        'MMStoryAgent': 'https://github.com/X-PLUG/MM_StoryAgent',
        'TheaterGen': 'https://github.com/donahowe/Theatergen',
        'StoryGen': 'https://github.com/haoningwu3639/StoryGen',
        'Vlogger': 'https://github.com/Vchitect/Vlogger',
        'SeedStory': 'https://github.com/TencentARC/SEED-Story'
    };

    /**
     * @param {DataRow[]} dataRows
     * @returns {DataRow[]}
     */
    function augmentDataWithModelUrls(dataRows) {
        if (!dataRows) return [];
        return dataRows.map(row => {
            const modelName = row['model'];
            if (modelName && modelUrls[modelName]) {
                return { ...row, model_url: modelUrls[modelName] };
            }
            return row;
        });
    }

    if (fullResultsData && fullResultsData.data) {
        fullResultsData.data = augmentDataWithModelUrls(fullResultsData.data);
    }
    if (liteResultsData && liteResultsData.data) {
        liteResultsData.data = augmentDataWithModelUrls(liteResultsData.data);
    }

    let currentSummaryView = 'lite'; // 'lite' or 'full'
    /** @type {ParsedData} */
    let activeSummaryDataset = (currentSummaryView === 'lite' && liteResultsData) ? liteResultsData : (fullResultsData || { headers: [], data: [] });

    const summaryLiteModeBtn = /** @type {HTMLButtonElement | null} */ (document.getElementById('lite-mode-btn-summary'));
    const summaryFullModeBtn = /** @type {HTMLButtonElement | null} */ (document.getElementById('full-mode-btn-summary'));
    const summaryTableThead = /** @type {HTMLTableSectionElement | null} */ (document.getElementById('summary-leaderboard-thead'));
    const summaryTableTbody = /** @type {HTMLTableSectionElement | null} */ (document.getElementById('summary-leaderboard-tbody'));

    const summaryColumnsToShow = {
        'model': 'Model',
        'Character Consistency(CRef)_rank': 'Character Consistency',
        'Style Consistency(SRef)_rank': 'Style Consistency',
        'Prompt Alignment_rank': 'Prompt Alignment',
        'Generative Quality_rank': 'Generative Quality',
        'Diversity_rank': 'Diversity',
        'overall_rank': 'Overall Rank',
    };

    function renderSummaryTable() {
        if (!summaryTableThead || !summaryTableTbody || !activeSummaryDataset) return;

        summaryTableThead.innerHTML = '';
        summaryTableTbody.innerHTML = '';

        const headerRow = document.createElement('tr');
        const headersToRender = Object.keys(summaryColumnsToShow);
        
        headersToRender.forEach(headerKey => {
            const th = document.createElement('th');
            th.className = "py-3 px-4 text-center whitespace-nowrap text-gray-600 dark:text-slate-300";
            
            let displayText = summaryColumnsToShow[headerKey] || headerKey;
            // Apply specific display text transformations if needed
            if (headerKey === 'overall_rank') displayText = "Overall Rank";
            // Removed Method specific display text as it's a group header now

            th.textContent = displayText;
            th.dataset.langKey = summaryColumnsToShow[headerKey] ? summaryColumnsToShow[headerKey].toLowerCase().replace(/ /g, '_') : headerKey;
            headerRow.appendChild(th);
        });
        summaryTableThead.appendChild(headerRow);

        // Group data by Method
        const methods = [...new Set(activeSummaryDataset.data.map(row => row['Method']))].sort();
        const numberOfColumns = headersToRender.length;

        methods.forEach(methodName => {
            if (!methodName) return; // Skip if method name is undefined or empty

            // Add Method group header row to tbody
            const groupHeaderRow = document.createElement('tr');
            const groupTh = document.createElement('th');
            groupTh.colSpan = numberOfColumns;
            groupTh.className = "bg-gray-100 dark:bg-slate-700 text-gray-800 dark:text-slate-200 font-semibold py-2 px-4 text-center sticky top-0 z-10";
            groupTh.textContent = methodName;
            groupHeaderRow.appendChild(groupTh);
            summaryTableTbody.appendChild(groupHeaderRow);

            // Filter and render rows for the current method
            const rowsForMethod = activeSummaryDataset.data.filter(row => row['Method'] === methodName);

            rowsForMethod.forEach(rowData => {
                const tr = document.createElement('tr');
                tr.className = "border-b dark:border-slate-700 hover:bg-gray-50 dark:hover:bg-slate-700/50";

                headersToRender.forEach(headerKey => {
                    const td = document.createElement('td');
                    td.className = "py-3 px-4 text-center text-gray-700 dark:text-slate-300";
                    const currentValuedRow = /** @type {DataRow & { model_url?: string }} */ (rowData);
                    let cellValue = currentValuedRow[headerKey] !== undefined ? String(currentValuedRow[headerKey]) : '';
                    
                    if (headerKey === 'model' && currentValuedRow.model_url) {
                        const a = document.createElement('a');
                        a.href = currentValuedRow.model_url;
                        a.textContent = cellValue;
                        a.target = '_blank';
                        a.rel = 'noopener noreferrer';
                        a.className = 'text-blue-600 hover:underline dark:text-sky-400 dark:hover:text-sky-300';
                        td.appendChild(a);
                    } else if (headerKey === 'overall_rank') {
                        td.innerHTML = `<span class="score py-1 px-2 rounded bg-green-100 text-green-700 dark:bg-green-700/30 dark:text-green-300 font-semibold text-sm">${cellValue}</span>`;
                    } else {
                        td.textContent = cellValue;
                    }
                    tr.appendChild(td);
                });
                summaryTableTbody.appendChild(tr);
            });
        });
    }

    function updateSummaryButtonStyles() {
        if (!summaryLiteModeBtn || !summaryFullModeBtn) return;
        if (currentSummaryView === 'lite') {
            summaryLiteModeBtn.classList.add('bg-blue-600', 'text-white', 'shadow-md');
            summaryLiteModeBtn.classList.remove('bg-gray-200', 'text-gray-700', 'hover:bg-gray-300', 'dark:bg-slate-600', 'dark:text-slate-300', 'dark:hover:bg-slate-500');
            summaryFullModeBtn.classList.add('bg-gray-200', 'text-gray-700', 'hover:bg-gray-300', 'dark:bg-slate-600', 'dark:text-slate-300', 'dark:hover:bg-slate-500');
            summaryFullModeBtn.classList.remove('bg-blue-600', 'text-white', 'shadow-md');
        } else {
            summaryFullModeBtn.classList.add('bg-blue-600', 'text-white', 'shadow-md');
            summaryFullModeBtn.classList.remove('bg-gray-200', 'text-gray-700', 'hover:bg-gray-300', 'dark:bg-slate-600', 'dark:text-slate-300', 'dark:hover:bg-slate-500');
            summaryLiteModeBtn.classList.add('bg-gray-200', 'text-gray-700', 'hover:bg-gray-300', 'dark:bg-slate-600', 'dark:text-slate-300', 'dark:hover:bg-slate-500');
            summaryLiteModeBtn.classList.remove('bg-blue-600', 'text-white', 'shadow-md');
        }
    }

    summaryLiteModeBtn?.addEventListener('click', () => {
        if (currentSummaryView === 'lite') return;
        currentSummaryView = 'lite';
        activeSummaryDataset = liteResultsData; // This is now the augmented data
        updateSummaryButtonStyles();
        renderSummaryTable();
        if (typeof window.updateTranslations === 'function') window.updateTranslations(); // Re-apply translations if needed
    });

    summaryFullModeBtn?.addEventListener('click', () => {
        if (currentSummaryView === 'full') return;
        currentSummaryView = 'full';
        activeSummaryDataset = fullResultsData; // This is now the augmented data
        updateSummaryButtonStyles();
        renderSummaryTable();
        if (typeof window.updateTranslations === 'function') window.updateTranslations(); // Re-apply translations if needed
    });

    document.addEventListener('DOMContentLoaded', () => {
        if (summaryLiteModeBtn && summaryFullModeBtn) { // Ensure buttons exist
            // Set initial dark mode styles for buttons if not active
            if (currentSummaryView === 'lite') {
                summaryFullModeBtn.classList.add('dark:bg-slate-600', 'dark:text-slate-300', 'dark:hover:bg-slate-500');
            } else {
                summaryLiteModeBtn.classList.add('dark:bg-slate-600', 'dark:text-slate-300', 'dark:hover:bg-slate-500');
            }
        }
        updateSummaryButtonStyles();
        renderSummaryTable();
        if (typeof window.updateTranslations === 'function') {
            window.updateTranslations();
        }
    });

</script>
